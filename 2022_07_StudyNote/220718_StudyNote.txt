<2022.07.18일자 공부 기록>

1. JS 기초 공부 강의 시청
	- JS는 브라우저에 내장되어 있음(크롬 기준 개발자 도구 -> 콘솔에 가 보면 JS 간단하게 코딩 가능)
	테스트 용도로는 적합하지만 긴 코드 작성에는 X
	
	- 에디터 사용하여 JS 파일과 CSS 파일을 간단하게 작성 후 열어 보면 생각했던 웹 페이지가 나오지 않고 원본
	코드 그대로 화면에 보여지게 됨
	(그래서 HTML에서 CSS와 JS를 연결하여 사용, HTML이 접착제 역할을 한다고 생각하면 됨)

	- js에서 기초적인 데이터형 -> 숫자(integer, float)와 문자
	이 데이터형은 js가 어떻게 처리해야 하는지 알고 있다.
	(ex : 2 + 2 출력 시 4가 나온다던지, "He" + "llo" 출력 시 "Hello" 가 출력된다던지 하는 것들)

	- const, let, var
	이전 버전의 js에서는 변수 선언 시 var 키워드밖에 없었다.(var는 어디서든 수정 가능, 언어의 보호를 받지 못함.)
	최신 버전에서 추가된 const와 let 키워드
	const 키워드로 변수 선언 시 해당 변수는 상수화되어 다른 곳에서 수정되는 것을 허용하지 않음.(let은 수정 가능)
	=> 그래서 보통 js 작성 시 업데이트가 필요한 몇몇 변수들 빼고는 대부분 const 키워드로 선언하게 된다.

	- true, false(boolean 타입)
	말 그대로 어떤 상태에 대해 true(참), false(거짓)을 표시해 주는 데이터형이다.

	- null, undefined
	null은 변수에 대해 값이 아무것도 없다는 것을 알리기 위해 null이라는 상태를 부여하는 것이다.
	undefined는 변수 선언 후 값을 넣어주지 않는다면 표시되는 상태로, 값이 정의되지 않았다는 뜻이다.

	- array, object
	array는 배열로써 다양한 데이터들을 리스트 형태로 저장할 수 있는 데이터형이다.
	(ex : 요일에 대한 정보를 저장하고 싶을 때 변수 여러 개를 선언하여 저장하는 것보다 요일이라는 배열을 만들어 ["mon", "thu"..... ] 이렇게 저장하는 것이 더 효율적.)
	object는 객체로 서로 연관된 정보들을 저장하고 사용할 수 있다.
	(ex : 게임을 예로 들었을 때 player의 데이터를 저장하고 싶을 때, 이름과 성별, 능력치 등 다양한 정보가 있을 수 있다.
	이 때 배열을 사용할 수 있지만 배열은 데이터 각각이 어떤 정보에 해당하는지에 대한 설명을 주지 않기 때문에 이와 같은 경우 객체 사용이 더 효율적일 수 있다.)

	- 함수(function 키워드 사용, 기능 정의)
	함수는 어떤 기능에 대해 함수명으로 여러 번 불러올 수 있도록 코드를 정의할 수 있는 키워드이다.
	함수에서 처리를 한 후 결과값을 return 할 수 있는데, 이 때 return 후 함수는 종료되므로 return 뒤의 코드들은 실행되지 않는다.

	- typeof(변수값)
	해당 값이 어떤 데이터형인지 알려주는 역할의 함수이다.(ex : 5(Number), "Hello"(string), true(boolean) 등....)

	- if ~ else if ~ else
	조건식을 통해(true 또는 false) 해당 조건이 true일 때 실행할 코드를 지정할 수 있다.

	- document 객체를 통해 js에서 html 요소에 접근하고, 내용을 변경할 수도 있다.